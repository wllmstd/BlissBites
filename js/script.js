//Save Contact Form to Database
function submitForm() {
  const name = document.getElementById("name").value;
  const email = document.getElementById("email").value;
  const number = document.getElementById("number").value;

  // Get a reference to the "Contacts" node in the database
  const contactsRef = database.ref("Contacts");

  // Push the data to the Firebase database with an automatically generated ID
  const newContactRef = contactsRef.push({
    name: name,
    email: email,
    number: number,
  });

  // Get the unique ID generated by push
  const contactID = newContactRef.key;

  alert("Thank you!");

  // Optionally, you can clear the form fields after submission
  document.getElementById("name").value = "";
  document.getElementById("email").value = "";
  document.getElementById("number").value = "";

  console.log("Contact ID:", contactID); // Log the contact ID to the console for reference
}
/////////////////////////////////////////////////////////////

// Login Form
document.addEventListener("DOMContentLoaded", function () {
  const signInForm = document.getElementById("signInForm");
  const loginError = document.getElementById("loginError");

  // Add event listener to form submission
  signInForm.addEventListener("submit", function (event) {
    // Prevent the default form submission
    event.preventDefault();

    // Get the values from the input fields
    const email = document.getElementById("signinEmail").value;
    const password = document.getElementById("signinPassword").value;

    // Check if the email and password are not empty
    if (email.trim() === "" || password.trim() === "") {
      alert("Enter your email and password");
      // Remove the following line
      event.stopPropagation(); // Stop event propagation
      return;

      // Clear previous error message
      loginError.textContent = "";
    }

    // Authenticate user with Firebase Authentication
    firebase
      .auth()
      .signInWithEmailAndPassword(email, password)
      .then((userCredential) => {
        const uid = userCredential.user.uid;

        // Check if the user exists in the Firestore database
        return firebase.firestore().collection("users").doc(uid).get();
      })
      .then((doc) => {
        if (doc.exists) {
          // Redirect to orders.html after successful login
          window.location.href = "orders.html";
        } else {
          console.log("User not found in the database");
          loginError.textContent = "Account does not exist";
        }
      })
      .catch((error) => {
        console.error("Error logging in:", error.message);
        if (error.code === "auth/user-not-found") {
          console.log("User not found");
          loginError.textContent = "Account does not exist";
        } else {
          console.log("Other authentication error:", error.code);
          loginError.textContent = "Invalid credentials";
        }
      });
  });

  //////////////////////////////////////////

  // Signup Form
  const signUpForm = document.getElementById("signUpForm");
  const signupBtn = document.getElementById("signupBtn");

  // Add event listener to form submission
  signUpForm.addEventListener("submit", function (event) {
    event.preventDefault(); // Prevent the default form submission

    const username = document.getElementById("signupUsername").value;
    const email = document.getElementById("signupEmail").value;
    const password = document.getElementById("signupPassword").value;

    // Check if the username, email, and password are not empty
    if (
      username.trim() === "" ||
      email.trim() === "" ||
      password.trim() === ""
    ) {
      alert("Enter username, email, and password");
      return;
    }

    // Create user with email and password
    firebase
      .auth()
      .createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        const uid = userCredential.user.uid;

        // Store additional user details in Firestore
        firebase.firestore().collection("users").doc(uid).set({
          username: username,
          email: email,
          // Add more fields as needed
        });

        // Alert and clear fields after successful signup
        alert(
          "Account Successfully Created! Go to Login to log in to your account"
        );
        signUpForm.reset();
      })
      .catch((error) => {
        console.error("Error signing up:", error.message);
      });
  });
});

//////////////////////////////

//Order details
function saveData() {
  const paymentMethod = document.getElementById("paymentMethod").value;
  const orderType = document.getElementById("orderType").value;
  const customerName = document.getElementById("customerDetailsN").value;
  const phoneNumber = document.getElementById("customerDetailsP").value;
  const specialInstructions = document.getElementById("customerDetailsS").value;
  const streetAddress = document.getElementById("deliveryAddressStreet").value;
  const zipCode = document.getElementById("deliveryAddressZip").value;

  // Retrieve order details from local storage
  const orderDetails = JSON.parse(localStorage.getItem("orderDetails")) || {
    selectedProducts: [],
    totalPrice: 0,
  };

  // Calculate the total price from the selected products
  const total = orderDetails.selectedProducts.reduce((sum, product) => {
    return sum + parseFloat(product.price.replace("â‚±", ""));
  }, 0);

  // Get a reference to the "Orders" node in the database
  const ordersRef = database.ref("Orders");

  // Push the order details and order summary to the Firebase database with an automatically generated ID
  const newOrderRef = ordersRef.push({
    paymentMethod: paymentMethod,
    orderType: orderType,
    customerName: customerName,
    phoneNumber: phoneNumber,
    specialInstructions: specialInstructions,
    streetAddress: streetAddress,
    zipCode: zipCode,
    orderDetails: orderDetails.selectedProducts, // Add selected products
    totalPrice: total.toFixed(2), // Add total price
  });

  // Get the unique ID generated by push
  const orderID = newOrderRef.key;

  alert("Order placed successfully! Order ID: " + orderID);

  // Optionally, you can clear the form fields after submission
  document.getElementById("orderForm").reset();

  // Clear order details from local storage
  localStorage.removeItem("orderDetails");

  console.log("Order ID:", orderID); // Log the order ID to the console for reference
}
